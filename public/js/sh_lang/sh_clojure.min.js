if (! this.sh_languages) {
  this.sh_languages = {};
}
sh_languages['clojure'] = [
  [
    [
      /(;=>)/g,
      ['sh_comment'],
      -1
    ],
    [
      /#\|/g,
      'sh_comment',
      1
    ],
    [
      /;/g,
      'sh_comment',
      2
    ],
    [
      /"/g,
      'sh_string',
      3
    ],
    [
      /\^\{/g,
      'sh_cbracket',
      4
    ],
    [
      /(?:[-+]?)(?:(?:0)|(?:[1-9][0-9]*)|0[xX](?:[0-9A-Fa-f]+)|0(?:[0-7]+)|(?:[1-9][0-9]?)[rR](?:[0-9A-Za-z]+)|0[0-9]+)(?:N)?|(?:[-+]?[0-9]+)\/(?:[0-9]+)|(?:[-+]?[0-9]+(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?)(?:M)?/g,
      'sh_number',
      -1
    ],
    [
      /~@|~|`|'/g,
      'sh_keyword',
      -1
    ],
    [
      /::?[A-Za-z0-9\-\/]+/g,
      'sh_symbol',
      -1
    ],
    [
      /(?:\+|\*)[A-Za-z0-9_\-\+\*\?:]+(?:\+|\*)/g,
      'sh_variable',
      -1
    ],
    [
      /(?:\b|\+|\?|\*|\-)[A-Za-z0-9_\-\+\*\?:]+(?:\+|\?|\*|\-|\b)/g,
      'sh_normal',
      -1
    ],
    [
      /(\( *)(if|do|let|quote|var|fn|loop|recur|throw|try|catch|finally|monitor-enter|monitor-exit|\.|new|set!)((?![A-Za-z0-9\-]))/g,
      ['sh_cbracket', 'sh_label', 'sh_cbracket'],
      -1
    ],
    [
      /(\( *)(->|->>|\.\.|amap|and|areduce|assert|binding|bound-fn|case|comment|cond|condp|declare|delay|doc|doseq|dosync|dotimes|doto|extend-protocol|extend-type|fn|for|future|gen-class|gen-interface|if-let|if-not|import|io!|lazy-cat|lazy-seq|let|letfn|locking|loop|memfn|ns|or|proxy|proxy-super|pvalues|refer-clojure|reify|sync|time|when|when-first|when-let|when-not|while|with-bindings|with-in-str|with-loading-context|with-local-vars|with-open|with-out-str|with-precision)((?![A-Za-z0-9\-]))/g,
      ['sh_cbracket', 'sh_keyword', 'sh_cbracket'],
      -1
    ],
    [
      /(\( *)(def.*?  *)([A-Za-z0-9\-]*)/g,
      ['sh_cbracket', 'sh_keyword', 'sh_function'],
      -1
    ],
    [
      /\(|\)|#\(|\)|\[|\]|\{|\}|#\{|\}/g,
      'sh_cbracket',
      -1
    ],
    [
      /(?:%&|%[1-9]?)/g,
      'sh_number',
      -1
    ]
  ],
  [
    [
      /\|#/g,
      'sh_comment',
      -2
    ],
    [
      /#\|/g,
      'sh_comment',
      1
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ]
  ],
  [
    [
      /"/g,
      'sh_string',
      -2
    ],
    [
      /\\./g,
      'sh_specialchar',
      -1
    ]
  ],
  [
    [
      /\}/g,
      'sh_cbracket',
      -2
    ],
    [
      /\\./g,
      'sh_specialchar',
      -1
    ]
  ]
];
